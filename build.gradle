import org.gradle.api.tasks.Delete

plugins {
    id 'com.android.application' version '8.6.0' apply false
    id 'com.android.library' version '8.6.0' apply false
    id 'io.codearte.nexus-staging' version '0.30.0'
}

group = findProperty('GROUP') ?: 'org.smartregister'
version = findProperty('VERSION_NAME') ?: '0.0.1-SNAPSHOT'

allprojects {
    group = rootProject.group
    version = rootProject.version

    repositories {
        mavenLocal()
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://cloudant.github.io/cloudant-sync-eap/repository' }
        maven { url 'https://s3.amazonaws.com/repo.commonsware.com' }
        maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }

    configurations.all { configuration ->
        configuration.resolutionStrategy {
            dependencySubstitution {
                substitute(module('com.github.BlueCodeSystems:opensrp-client-core'))
                        .using(module('io.github.bluecodesystems:opensrp-client-core:6.2.2'))
                substitute(module('io.github.bluecodesystems:android-p2p-sync'))
                        .using(module('com.github.BlueCodeSystems:android-p2p-sync:v0.4.3'))
            }
            force 'com.commonsware.cwac:saferoom.x:1.3.0'
        }
        exclude group: 'com.commonsware.cwac', module: 'saferoom'
    }
}

subprojects { subproject ->
    tasks.withType(Test).configureEach { testTask ->
        testTask.maxParallelForks = 1
        testTask.forkEvery = 0
        testTask.jvmArgs(
                '--add-opens=java.base/java.lang=ALL-UNNAMED',
                '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED',
                '--add-opens=java.base/java.io=ALL-UNNAMED',
                '--add-opens=java.base/java.net=ALL-UNNAMED',
                '--add-opens=java.base/java.util=ALL-UNNAMED',
                '--add-opens=java.base/java.text=ALL-UNNAMED',
                '--add-opens=java.base/java.security=ALL-UNNAMED',
                '--add-opens=java.base/jdk.internal.reflect=ALL-UNNAMED',
                '--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED',
                '--add-opens=java.base/jdk.internal.util=ALL-UNNAMED',
                '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED',
                '--add-opens=java.base/sun.security.util=ALL-UNNAMED',
                '--add-opens=java.desktop/java.awt.font=ALL-UNNAMED',
                '--add-exports=java.base/jdk.internal.reflect=ALL-UNNAMED'
        )
    }

    tasks.withType(JavaCompile).configureEach { compileTask ->
        compileTask.options.fork = true
        compileTask.options.forkOptions.memoryMaximumSize = '2048m'
    }
}

nexusStaging {
    serverUrl = 'https://s01.oss.sonatype.org/service/local/'
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}
